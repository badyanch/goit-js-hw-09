{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAQH,EAAQE,cAAc,yBAoDpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA5DbN,EAAQc,iBAAiB,UAAUC,IACjCA,EAAIC,iBACJb,EAAMc,aAAa,WAAY,IAE/B,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBL,EAAIM,cAER,GA4BF,SAAwBf,EAAOa,EAAMC,GACnC,GAAId,EAAQ,GAAKa,EAAO,GAAKC,EAAS,EAEpC,OADAtB,EAAAwB,OAAOC,QAAQ,kCACR,EAGT,IAAKH,EAEH,OADAtB,EAAAwB,OAAOC,QAAQ,iCACR,EAGT,OAAO,C,CAtCLC,CACEC,OAAOnB,EAAMoB,OACbD,OAAON,EAAKO,OACZD,OAAOL,EAAOM,QAKhB,YAFAvB,EAAMwB,gBAAgB,YAKxB,IAAIC,EAAeH,OAAOnB,EAAMoB,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKT,EAAOM,MAAOG,GAAK,EACtCzB,EAAcyB,EAAGD,GACdE,MAAKJ,GAAS5B,EAAAwB,OAAOS,QAAQL,KAC7BM,OAAMC,GAASnC,EAAAwB,OAAOC,QAAQU,KAC9BC,SAAQ,KACHT,OAAOL,EAAOM,SAAWG,GAC3B1B,EAAMwB,gBAAgB,WAAW,IAIvCC,GAAgBH,OAAON,EAAKO,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst btnEl = formRef.querySelector('button[type=\"submit\"]');\n\nformRef.addEventListener('submit', evt => {\n  evt.preventDefault();\n  btnEl.setAttribute('disabled', '');\n\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  if (\n    formValidation(\n      Number(delay.value),\n      Number(step.value),\n      Number(amount.value)\n    )\n  ) {\n    btnEl.removeAttribute('disabled');\n\n    return;\n  }\n\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelay)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error))\n      .finally(() => {\n        if (Number(amount.value) === i) {\n          btnEl.removeAttribute('disabled');\n        }\n      });\n\n    currentDelay += Number(step.value);\n  }\n});\n\nfunction formValidation(delay, step, amount) {\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notify.failure('Negative numbers are invalid.');\n    return true;\n  }\n\n  if (!amount) {\n    Notify.failure('Create at least one promise.');\n    return true;\n  }\n\n  return false;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$btnEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","setAttribute","elements","step","amount","currentTarget","Notify","failure","$47d4ff9957288465$var$formValidation","Number","value","removeAttribute","currentDelay","i","then","success","catch","error","finally"],"version":3,"file":"03-promises.6bb19ab8.js.map"}